{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","nameId","uuidv4","numberId","handleChange","e","currentTarget","value","setState","handleSubmit","onSubmit","props","preventDefault","resetForm","this","className","styles","Form","autoComplete","htmlFor","type","pattern","title","required","placeholder","onChange","id","button","Component","Filter","filterId","filter","defaultProps","ContactItem","onDeleteItem","onClick","ContactList","onVisibleFilter","onDeleteContact","map","App","contacts","findName","normalizedName","toLowerCase","find","contact","addNewContact","alert","prevState","deleteContact","contactId","changeFilter","getVisibleContact","normalizedFilter","includes","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","visibleFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd89b19b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__34bGL\",\"button\":\"ContactForm_button__2ZmYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2urZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__1qoQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3_ZK-\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  nameId = uuidv4();\r\n  numberId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { onSubmit } = this.props;\r\n\r\n    e.preventDefault();\r\n\r\n    onSubmit(this.state);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form\r\n        className={styles.Form}\r\n        onSubmit={this.handleSubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label htmlFor={this.nameId}>\r\n          Name{' '}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"Type name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          id={this.nameId}\r\n        />\r\n\r\n        <label htmlFor={this.numberId}>\r\n          Number{' '}\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"Type number\"\r\n          id={this.numberId}\r\n          value={number}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  filterId = uuidv4();\r\n  render() {\r\n    const { filter, onChange } = this.props;\r\n\r\n    return (\r\n      <div className={styles.Filter}>\r\n        <label htmlFor={this.filterId}>\r\n          Find contacts by name{' '}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          id={this.filterId}\r\n          onChange={onChange}\r\n          placeholder=\"Type name contact\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.css';\r\n\r\nclass ContactItem extends Component {\r\n  render() {\r\n    const { name, number, onDeleteItem, id } = this.props;\r\n    const handleDelete = () => onDeleteItem(id);\r\n\r\n    return (\r\n      <li className={styles.ContactItem}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button\r\n          onClick={handleDelete}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\nexport default ContactItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { onVisibleFilter, onDeleteContact } = this.props;\r\n    return (\r\n      <ul className={styles.ContactList}>\r\n        {onVisibleFilter.map(({ id, name, number }) => {\r\n          return (\r\n            <ContactItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onDeleteItem={onDeleteContact}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.defaultProps = {\r\n  onVisibleFilter: [],\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  onVisibleFilter: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\n      { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\n      { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\n      { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  findName = name => {\n    const { contacts } = this.state;\n    const normalizedName = name.toLowerCase();\n    return contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName,\n    );\n  };\n\n  addNewContact = ({ name, number }) => {\n    const checkName = this.findName(name);\n\n    if (checkName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      return { contacts: [contact, ...prevState.contacts] };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleFilter = this.getVisibleContact();\n\n    return (\n      <div className=\"Container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addNewContact} />\n        <div className=\"Contacts\">\n          <h2>Contacts</h2>\n          <Filter filter={filter} onChange={this.changeFilter} />\n          <ContactList\n            onVisibleFilter={visibleFilter}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}